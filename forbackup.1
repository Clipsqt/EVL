<div class="select">
        <h4>Filter:</h4>
        <label for="filterFrom">Date Release From:</label>
        <select id="filterFrom" onchange="filterTable()">
            <option value="">All</option>
            <?php
            // Query distinct date values from your database
            $dateQuery = "SELECT DISTINCT releaseDate FROM request_logs";
            $dateResult = mysqli_query($conn, $dateQuery);

            while ($dateRow = mysqli_fetch_assoc($dateResult)) {
                echo '<option value="' . $dateRow["releaseDate"] . '">' . $dateRow["releaseDate"] . '</option>';
            }
            ?>
        </select>

        <label for="filterTo">To:</label>
        <select id="filterTo" onchange="filterTable()">
            <option value="">All</option>
            <?php
            // Query distinct date values from your database
            $dateQuery = "SELECT DISTINCT releaseDate FROM request_logs";
            $dateResult = mysqli_query($conn, $dateQuery);

            while ($dateRow = mysqli_fetch_assoc($dateResult)) {
                echo '<option value="' . $dateRow["releaseDate"] . '">' . $dateRow["releaseDate"] . '</option>';
            }
            ?>
        </select>
        <div class="select_item">
            <label for="filterBy">Item Description:</label>
            <select id="filterBy" onchange="filterTable2()">
                <option value="">All</option>
                <?php
                // Query the unique item descriptions from your database
                $itemQuery = "SELECT DISTINCT item_description FROM request_logs ORDER BY item_description ASC";
                $itemResult = mysqli_query($conn, $itemQuery);

                while ($itemRow = mysqli_fetch_assoc($itemResult)) {
                    echo '<option value="' . $itemRow["item_description"] . '">' . $itemRow["item_description"] . '</option>';
                }
                ?>
            </select>
        </div>
        <div class="select_name">
            <label for="filterName">Name:</label>
            <select id="filterName" onchange="filterTable2()">
                <option value="">All</option>
                <?php
                // Query the unique item descriptions from your database
                $itemQuery = "SELECT DISTINCT accountName FROM ris_accounts ORDER BY accountName ASC";
                $itemResult = mysqli_query($conn, $itemQuery);

                while ($itemRow = mysqli_fetch_assoc($itemResult)) {
                    echo '<option value="' . $itemRow["accountName"] . '">' . $itemRow["accountName"] . '</option>';
                }
                ?>
            </select>
        </div>
        <form action="" method="get">
            <div class="sorting">
                <label for="sort_option">Sort:</label>
                <select name="sort_option" id="sort_option" onchange="sortTable()">
                    <option value="">By RIS No.</option>
                    <option value="low-high">Ascending</option>
                    <option value="high-low">Descending</option>
                </select>
            </div>
        </form>
        <div class="total-quantity">
            <label for="totalQuantity">Total Quantity Requested:</label>
            <input type="text" id="totalQuantity" readonly>
        </div>

    </div>

//Function for filter
function filterTable() {
    var filterFrom = document.getElementById("filterFrom").value;
    var filterTo = document.getElementById("filterTo").value;
    var table = document.getElementById("table");
    var rows = table.getElementsByTagName("tr");

    for (var i = 1; i < rows.length; i++) { // Start from 1 to skip the header row
        var formDateCell = rows[i].querySelector(".align-release-date");
        if (!formDateCell) continue; // Skip rows without the cell

        var formDate = formDateCell.textContent;

        if (
            (filterFrom === "" || formDate >= filterFrom) &&
            (filterTo === "" || formDate <= filterTo)
        ) {
            rows[i].style.display = "";
        } else {
            rows[i].style.display = "none";
        }
    }
}
function filterTable2() {
    var descriptionSelect = document.getElementById("filterBy");
    var descriptionFilterValue = descriptionSelect.value.toLowerCase();

    var nameSelect = document.getElementById("filterName");
    var nameFilterValue = nameSelect.value.toLowerCase();

    var filterFrom = document.getElementById("filterFrom").value;
    var filterTo = document.getElementById("filterTo").value;

    var table = document.getElementById("table");
    var rows = table.getElementsByTagName("tr");

    for (var i = 1; i < rows.length; i++) { // Start from 1 to skip the header row
        var descriptionCell = rows[i].querySelector(".align-item-description");
        var nameCell = rows[i].querySelector(".align-account-name");
        var formDateCell = rows[i].querySelector(".align-release-date");

        if (!descriptionCell || !nameCell || !formDateCell) continue; // Skip rows without any of the cells

        var description = descriptionCell.textContent.toLowerCase();
        var name = nameCell.textContent.toLowerCase();
        var formDate = formDateCell.textContent;

        var row = rows[i];

        // Check if all filters match, and show/hide accordingly
        if ((descriptionFilterValue === "" || description.indexOf(descriptionFilterValue) > -1) &&
            (nameFilterValue === "" || name.indexOf(nameFilterValue) > -1) &&
            ((filterFrom === "" || formDate >= filterFrom) &&
            (filterTo === "" || formDate <= filterTo))) {
            row.style.display = "";
        } else {
            row.style.display = "none";
        }
    }
}

// Function for sorting
function sortTable() {
    var table = document.getElementById("table");
    var rows = table.rows;
    var sortOption = document.getElementById("sort_option").value;

    // Convert rows to an array for sorting
    var rowsArray = Array.from(rows).slice(1); // Exclude the header row

    // Sort the array based on the selected option
    if (sortOption === "low-high") {
        rowsArray.sort(function (a, b) {
            var quantityA = parseInt(a.cells[7].textContent);
            var quantityB = parseInt(b.cells[7].textContent);
            return quantityA - quantityB;
        });
    } else if (sortOption === "high-low") {
        rowsArray.sort(function (a, b) {
            var quantityA = parseInt(a.cells[7].textContent);
            var quantityB = parseInt(b.cells[7].textContent);
            return quantityB - quantityA;
        });
    } else {
        window.location.reload();

    }

    // Reinsert sorted rows into the table
    for (var i = 0; i < rowsArray.length; i++) {
        table.appendChild(rowsArray[i]);
    }
}