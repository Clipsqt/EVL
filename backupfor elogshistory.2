

    $(document).ready(function() {
        $(".certificate").click(function(e) {
            e.preventDefault(); // Prevent the default link behavior
    
            const referencecode = $(this).data('referencecode');
    
            // Send an AJAX request to the server to get the current series counter
            $.ajax({
                url: 'get_series_counter.php',
                method: 'GET',
                success: function(response) {
                    const seriesCounter = parseInt(response);
    
                    // Generate a series number in the format "CA-YYYY-XXXX"
                    const seriesnumber = generateSeriesNumber(seriesCounter);
    
                    // Send another AJAX request to increment the series counter on the server
                    $.ajax({
                        url: 'increment_series_counter.php',
                        method: 'POST',
                        data: {
                            seriesCounter: seriesCounter // Send the current series counter to the server
                        },
                        success: function(updatedCounter) {
                            // Send the series number to the server and handle the response
                            $.ajax({
                                url: 'insert_into_database.php',
                                method: 'POST',
                                data: {
                                    referencecode: referencecode,
                                    seriesnumber: seriesnumber
                                },
                                success: function(response) {
                                    console.log(response); // Log the response for debugging
                                    // Redirect to the certificate page after successful data transfer
                                    window.location.href = 'certificate_of_appearance.php?reference_no=' + referencecode;
                                },
                                error: function(error) {
                                    console.error(error); // Log the error for debugging
                                }
                            });
                        },
                        error: function(error) {
                            console.error(error); // Log the error for debugging
                        }
                    });
                },
                error: function(error) {
                    console.error(error); // Log the error for debugging
                }
            });
        });
    
        // Function to generate a series number in the format "CA-YYYY-XXXX"
        function generateSeriesNumber(counter) {
            const currentYear = new Date().getFullYear();
    
            // Pad the counter with leading zeros if needed
            const formattedCounter = ('00000' + counter).slice(-6);
    
            return 'CA-' + currentYear + '-' + formattedCounter;
        }
    });
    



     <td> <a href="certificate_of_appearance.php?reference_no=<?php echo $referencecode; ?>" class="certificate" data-referencecode="<?php echo $referencecode; ?>">Certificate</a></td>



      function exportToPdf() {
    // Clone the certificate body and remove the button from the clone
    var certificateBodyClone = document.getElementBy<?php
// Connect to the database (replace with your actual database connection code)
require("connect.php");

// Connect to the database  
require("connect.php");

// Assuming the full name is passed via POST method
if (isset($_POST['fullName'])) {
    $fullName = $_POST['fullName'];

    // Get the maximum value of the series number column
    $maxSql = "SELECT MAX(seriesnumber) AS max_series_number FROM control_number";
    $maxResult = mysqli_query($conn, $maxSql);
    $maxRow = mysqli_fetch_assoc($maxResult);
    $maxSeriesNumber = $maxRow['max_series_number'];

    // Increment the maximum value by 1
    $seriesNumber = intval(substr($maxSeriesNumber, -6)) + 1;

    // Format the series number as CA-YYYY-000001
    $formattedSeriesNumber = sprintf("CA-%s-%06d", date("Y"), $seriesNumber);

    // Insert the full name and formatted series number into the "control_number" table
    $insertSql = "INSERT INTO control_number (fullname, seriesnumber) VALUES ('$fullName', '$formattedSeriesNumber')";
    
    if (mysqli_query($conn, $insertSql)) {
        echo "Full name and series number inserted into control_number table successfully";
    } else {
        echo "Error inserting full name and series number: " . mysqli_error($conn);
    }
} else {
    echo "Full name not received";
}
?>


Id('certificateBody').cloneNode(true);
    var downloadPdfButton = certificateBodyClone.querySelector('#downloadPdf');
    if (downloadPdfButton) {
        downloadPdfButton.remove();
    }

    // Extract the full name from the certificate
    var fullName = document.querySelector('.bold-text').textContent;

    // Send the full name to the PHP script using AJAX
    $.ajax({
        type: 'POST',
        url: 'insert_fullname.php',
        data: { fullName: fullName },
        success: function(response) {
            // Handle the response from the PHP script
            // Now, create PDF using html2pdf with the clone (excluding the button)
            html2pdf(certificateBodyClone);
        }
    });
}


function exportToPdf() {
    // Clone the certificate body and remove the button from the clone
    var certificateBodyClone = document.getElementById('certificateBody').cloneNode(true);
    var downloadPdfButton = certificateBodyClone.querySelector('#downloadPdf');
    if (downloadPdfButton) {
        downloadPdfButton.remove();
    }

    // Extract the full name from the certificate
    var fullName = document.querySelector('.bold-text').textContent;

    // Send the full name to the PHP script using AJAX
    $.ajax({
        type: 'POST',
        url: 'insert_fullname_and_seriesnumber.php',
        data: { fullName: fullName },
        success: function(response) {
            // Handle the response from the PHP script
            console.log(response); // You can log the response for debugging purposes

            // Now, create PDF using html2pdf with the clone (excluding the button)
            html2pdf(certificateBodyClone);
        }
    });
}

</script>




