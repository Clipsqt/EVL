<script>
    
  // Get the input element by its name
  const fullnameInput = document.querySelector('input[name="Fullname"]');

// Add an input event listener to validate and format the name
fullnameInput.addEventListener('input', function (e) {
    // Remove non-alphabetic characters using a regular expression
    const alphabeticValue = this.value.replace(/[^A-Za-z.\s]/g, '');

    // Update the input value with the alphabetic characters
    this.value = alphabeticValue;
});
// Add an event listener to the form for submission
document.addEventListener("DOMContentLoaded", function () {
    const form = document.querySelector('form');

    form.addEventListener('submit', async function (e) {
        e.preventDefault(); // Prevent the default form submission behavior

        try {
            const response = await fetch('Appointment.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded', // Change to 'application/json' if sending JSON data
                },
                body: new URLSearchParams(new FormData(form)),
            });

            if (!response.ok) {
                throw new Error(`Network response was not ok. Status: ${response.status}`);
            }

            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
                const data = await response.json();
                console.log(contentType);

                // Check if the reference number exists in the response data
                if (data.reference_no) {
                    // Check if the appointment type is "Online"
                    if (data.appointment && data.appointment.toLowerCase() === 'online') {
                        // Show SweetAlert with the fetched reference number
                        Swal.fire({
                            title: `Your reference number is: ${data.reference_no}`,
                            text: `TAKE A SCREENSHOT & PRESENT TO THE GUARD`,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                        
                        // Reset the form or perform any other necessary actions
                        form.reset();
                    } else {
                        // Do not show SweetAlert for Walk-in
                        form.reset();
                    }
                } else {
                    // Handle the case where no reference number is returned
                    console.error('No reference number found in the response.');
                }
                        } else {
                    // Handle non-JSON responses here (e.g., show a success message or reset the form)
                    console.log('Response is not in JSON format. Proceeding with form reset or other actions.');
                    form.reset();
                }
                
            
            } catch (error) {
    console.error('Error fetching reference number:', error.message);
    console.log('Full response:', error.response);  // Use error.response instead of response
}


    });
});




</script>

<script>
  // Function to generate a random reference number
  function generateReferenceNumber() {
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let referenceNumber = '';
    for (let i = 0; i < 8; i++) {
      const randomIndex = Math.floor(Math.random() * characters.length);
      referenceNumber += characters.charAt(randomIndex);
    }
    return referenceNumber;
  }

  // Get the input element by its name
  const fullnameInput = document.querySelector('input[name="Fullname"]');

  // Add an input event listener to validate and format the name
  fullnameInput.addEventListener('input', function (e) {
    // Remove non-alphabetic characters using a regular expression
    const alphabeticValue = this.value.replace(/[^A-Za-z.\s]/g, '');

    // Update the input value with the alphabetic characters
    this.value = alphabeticValue;
  });

  // Add an event listener to the form for submission
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.querySelector('form');

    form.addEventListener('submit', async function (e) {
      e.preventDefault(); // Prevent the default form submission behavior

      try {
        const referenceNumber = generateReferenceNumber(); // Generate the reference number

        // ... Rest of your code ...

        // Instead of fetching the reference number from the server, you can use the generated one
        const data = {
          reference_no: referenceNumber,
          appointment: 'Online', // Change as needed
        };

        // Show SweetAlert with the generated reference number
        Swal.fire({
          title: `Your reference number is: ${data.reference_no}`,
          text: `TAKE A SCREENSHOT & PRESENT TO THE GUARD`,
          icon: 'success',
          confirmButtonText: 'OK'
        });

        // Reset the form or perform any other necessary actions
        form.reset();
      } catch (error) {
        console.error('Error generating or handling the reference number:', error.message);
      }
    });
  });
</script>